/*
01 

Apenas olhando o c√≥digo abaixo (sem escrever c√≥digo), voc√™ sabe qual valor 
cada let est√° armazenando ap√≥s a execu√ß√£o do forEach?

Apenas pense em qual valor cada let armazenou. Voc√™ pode escrever um coment√°rio 
tempor√°rio para ajudar a entender o fluxo. 

S√≥ ap√≥s concluir o racioc√≠nio sobre os valores das lets, confira se os valores 
que voc√™ sup√¥s est√£o corretos. Voc√™ pode usar console.log para visualizar os 
valores (ap√≥s concluir seu racioc√≠nio). 

O principal objetivo deste exerc√≠cio √© checar se voc√™ entendeu o fluxo de 
execu√ß√µes da fun√ß√£o do forEach.
*/

const fruits = ['ma√ß√£', 'banana', 'laranja']

let firstLet = 0
let secondLet = 3
let thirdLet = ''

fruits.forEach((fruit, index, array) => {
  const lastIndex = array.length - 1

  if (index === lastIndex) {
    thirdLet = fruit 
  }
  
  firstLet = firstLet + lastIndex  
  secondLet = secondLet * index  
})

/*FLUXO DE EXECU√á√ïES DO forEach

  1¬∞ execu√ß√£o

  lastIndex: 2
  index === lastIndex: false
  firstLet = 2
  secondLet = 0

  2¬∞ execu√ß√£o

  lastIndex: 2
  index === lastIndex: false
  firstLet = 4
  secondLet = 0


  3¬∞ execu√ß√£o

  lastIndex: 2
  index === lastIndex: true
  thirdLet = 'laranja'
  firstLet = 6
  secondLet = 0










/* 02

02

Converta o for loop abaixo em um forEach.

O seu forEach deve ter a mesma funcionalidade do for. Isto √©, ele deve 
preencher o array lettersInUppercase com a vers√£o mai√∫scula das letras. 

Deve ficar assim: ['V', 'E', 'P']

Ap√≥s converter, verifique se lettersInUppercase realmente est√° armazenando 
o valor que voc√™ deseja.




const letters = ['v', 'e', 'p']
const lettersInUppercase = []

for (let i = 0; i < letters.length; i++) {
  lettersInUppercase.push(letters[i].toUpperCase())
}

/* TENTATIVA DE RESOLVER
const lettersInUppercase = []

const letters = ['v', 'e', 'p']

letters.forEach(l => lettersInUppercase = l.letters )

console.log(lettersInUppercase)*/



/*
03

Declare um forEach logo abaixo da let paragraphs e acima da linha do 
section.innerHTML.

Ap√≥s a execu√ß√£o do seu forEach, a let paragraphs deve conter uma string com 
a marca√ß√£o HTML de 4 par√°grafos (<p>). 

Cada par√°grafo deve conter uma string do array reviews. 

Deve ficar assim: 
'<p>Eu sempre...</p><p>O primeiro...</p><p>Michael √©...</p><p>Recomendo...</p>'

üëÜüèª as retic√™ncias (...) acima s√£o apenas uma representa√ß√£o do restante 
do par√°grafo.
*/

const section = document.querySelector('[data-js="section"]')

const reviews = [
  'Eu sempre adorei o filme e quando descobri que tinha o livro tamb√©m fiquei doido. Demorei um pouco mas acabei comprando e finalmente li \o/.',
  'O primeiro filme foi baseado nesse livro, por√©m o livro (como sempre) √© muito mais completo, com mais personagens, mais acontecimentos e at√© mesmo mais dinossauros. Na verdade nesse livro tem coisas do segundo e terceiro filme tamb√©m, eles mudaram bastante nos filmes, acho que pra ficar mais comercial, e se o filme √© bom, o livro √© 100 vezes melhor.',
  'Michael √© um √≥timo autor, esse sim pesquisa muito antes de escrever um livro, al√©m da hist√≥ria que j√° prende sua aten√ß√£o, ele fala bastante de gen√©tica (pra explicar como os dinossauros foram criados) e acaba falando um pouco de programa√ß√£o (inform√°tica), por causa dos programas avan√ßados e modernos que o parque tinha. E isso foi uma das coisas que eu achei muito legal, ele explica as coisas com gr√°ficos, tabelas, c√≥digos ... enfim, o cara √© foda hahaha.',
  'Recomendo esse livro pra quem curte uma boa hist√≥ria de fic√ß√£o. Apesar de muita gente pensar que o livro n√£o tem gra√ßa, porque o legal mesmo √© ver o dinossauro no filme, com todos os efeitos especiais, eu digo pra deixar esse pensamento de lado, pois a hist√≥ria √© t√£o bem contada e os detalhes s√£o t√£o bem relatados, que voc√™ passa a fazer parte da hist√≥ria, e vive todas as emo√ß√µes hahaha.'
]

let paragraphs = ''


reviews.forEach(c =>{ 
    console.log(paragraphs)
    
    paragraphs += `<p> ${c}</p> ` 
})

section.innerHTML = paragraphs





